<?xml version="1.0"?>
<!--
  ~ Copyright (c) 2019 Telekom Deutschland AG
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Android Application Rules"
    xmlns="http://pmd.sf.net/ruleset/1.0.0"
    xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd"
    xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd">

    <description>Pmd ruleset</description>

    <exclude-pattern>.*/R.java</exclude-pattern>
    <exclude-pattern>.*/gen/.*</exclude-pattern>

    <rule ref="rulesets/java/android.xml" />
    <rule ref="rulesets/java/clone.xml" />
    <rule ref="rulesets/java/finalizers.xml" />
    <rule ref="rulesets/java/imports.xml">
        <exclude name="TooManyStaticImports" />
    </rule>
    <rule ref="rulesets/java/logging-java.xml" />
    <rule ref="rulesets/java/braces.xml" />
    <rule ref="rulesets/java/strings.xml">
        <exclude name="ConsecutiveAppendsShouldReuse" />
        <exclude name="ConsecutiveLiteralAppends" />
    </rule>
    <rule ref="rulesets/java/basic.xml" />
    <rule ref="rulesets/java/naming.xml">
        <exclude name="AbstractNaming" />
        <exclude name="LongVariable" />
        <exclude name="ShortVariable" />
        <exclude name="ShortClassName"/>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml" />
    <rule ref="rulesets/java/empty.xml" />

    <!-- MTT rules -->
    <rule ref="rulesets/java/unnecessary.xml/UnusedNullCheckInEquals">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/StringInstantiation">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/AvoidCatchingNPE">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/AvoidRethrowingException">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/ReplaceEnumerationWithIterator">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/AvoidArrayLoops">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml/UnusedFormalParameter">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptySwitchStatements">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/ClassCastExceptionWithToArray">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/AvoidThrowingNullPointerException">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/CompareObjectsWithEquals">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UseIndexOfChar">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/BigIntegerInstantiation">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/braces.xml/IfStmtsMustUseBraces">
        <priority>5</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/InstantiationToGetClass">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/coupling.xml/LooseCoupling">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptySynchronizedBlock">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SingularField">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/CloseResource">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/AvoidCatchingThrowable">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyWhileStmt">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/CollapsibleIfStatements">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml/UselessOperationOnImmutable">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/clone.xml/CloneMethodMustImplementCloneable">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/unnecessary.xml/UselessOverridingMethod">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/PreserveStackTrace">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/UseArraysAsList">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/AvoidThrowingRawExceptionTypes">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyIfStmt">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/EqualsNull">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/BrokenNullCheck">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/logging-jakarta-commons.xml/UseCorrectExceptionLogging">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/InefficientStringBuffering">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/sunsecure.xml/ArrayIsStoredDirectly">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/FinalizeOverloaded">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/ClassNamingConventions">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/controversial.xml/DontImportSun">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/imports.xml/DontImportJavaLang">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/StringBufferInstantiationWithChar">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/braces.xml/WhileLoopsMustUseBraces">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/StringToString">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/SimplifyConditional">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/ReplaceVectorWithList">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/NcssMethodCount">
        <priority>3</priority>
        <properties>
            <property name="minimum" value="50" />
        </properties>
    </rule>
    <rule ref="rulesets/java/logging-java.xml/AvoidPrintStackTrace">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/codesize.xml/NcssTypeCount">
        <priority>3</priority>
        <properties>
            <property name="minimum" value="800" />
        </properties>
    </rule>
    <rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyFinallyBlock">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/IntegerInstantiation">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/naming.xml/AvoidDollarSigns">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/AvoidAssertAsIdentifier">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/AvoidCallingFinalize">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/BooleanInstantiation">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/UnconditionalIfStatement">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/clone.xml/CloneThrowsCloneNotSupportedException">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/ReplaceHashtableWithMap">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/braces.xml/ForLoopsMustUseBraces">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyTryBlock">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/SignatureDeclareThrowsException">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/EmptyFinalizer">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/design.xml/IdempotentOperations">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strictexception.xml/ExceptionAsFlowControl">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/empty.xml/EmptyStaticInitializer">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/finalizers.xml/FinalizeDoesNotCallSuperFinalize">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UseStringBufferLength">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/migrating.xml/AvoidEnumAsIdentifier">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/braces.xml/IfElseStmtsMustUseBraces">
        <priority>3</priority>
    </rule>
    <rule ref="rulesets/java/logging-java.xml/SystemPrintln">
        <priority>2</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/UselessStringValueOf">
        <priority>4</priority>
    </rule>
    <rule ref="rulesets/java/strings.xml/AvoidDuplicateLiterals">
        <priority>4</priority>
    </rule>
</ruleset>
